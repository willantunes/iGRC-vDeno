@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  .perspective-1000 {
    perspective: 1000px;
  }

  .grid-3d {
    background-image: 
      linear-gradient(rgba(0, 59, 113, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 59, 113, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    transform: rotateX(60deg) rotateZ(0deg);
    transform-style: preserve-3d;
    animation: grid-rotate 20s linear infinite;
  }

  .cube {
    width: var(--size);
    height: var(--size);
    position: absolute;
    left: var(--x);
    top: var(--y);
    transform-style: preserve-3d;
    transform: translateZ(var(--z));
    animation: cube-float 15s ease-in-out infinite;
    animation-delay: var(--delay);
  }

  .cube::before,
  .cube::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: theme('colors.brand.blue');
    opacity: 0.15;
  }

  .cube::before {
    transform: rotateX(-45deg) rotateY(-45deg);
    animation: cube-rotate 20s linear infinite;
    animation-delay: var(--delay);
  }

  .cube::after {
    transform: rotateX(45deg) rotateY(45deg);
    animation: cube-rotate 20s linear infinite;
    animation-delay: var(--delay);
  }
}

@layer utilities {
  .bg-grid-pattern {
    background-image: 
      linear-gradient(to right, rgb(0 59 113 / 0.1) 1px, transparent 1px),
      linear-gradient(to bottom, rgb(0 59 113 / 0.1) 1px, transparent 1px);
    background-size: 24px 24px;
  }
}

@keyframes grid-rotate {
  0% {
    transform: rotateX(60deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(60deg) rotateZ(360deg);
  }
}

/* Character animations */
@keyframes blink {
  0%, 100% { transform: scaleY(1); }
  50% { transform: scaleY(0.1); }
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.eyes .eye {
  animation: blink 4s infinite;
}

.login-character {
  animation: bounce 6s ease-in-out infinite;
}

/* Input focus animations */
.input-focus .pupil {
  transition: transform 0.3s ease;
}

.input-focus:focus-within .pupil.left {
  transform: translateX(3px);
}

.input-focus:focus-within .pupil.right {
  transform: translateX(-3px);
}

/* Arm animations */
.arms path {
  transition: transform 0.3s ease;
}

/* Password focus state */
.arms.covering .arm {
  animation: coverEyes 0.3s ease forwards;
}

@keyframes coverEyes {
  to {
    transform: translateY(-20px);
  }
}

@keyframes float {
  0%, 100% { transform: translate(0, 0); }
  50% { transform: translate(-10px, -10px); }
}

.animate-float {
  animation: float 8s ease-in-out infinite;
}

@keyframes circuit-pulse {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; }
}

.animate-circuit-pulse {
  animation: circuit-pulse 2s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse 6s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}